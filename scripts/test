#!/usr/bin/env python
#^can't run with python-dbg as scapy passes a memory pointer from python to the kernel to configure a sniffer socket, offseting the pointer ahead of the python object header's length (which is different under -dbg)...
# http://bb.secdev.org/scapy/src/2d79fea15bea69a4be1debcaf850349f0f0fb962/scapy/arch/linux.py?at=default#cl-134
# i feex
#   elif hasattr(sys, 'gettotalrefcount'): bpfh = struct.pack("HL", nb, id(bpf)+28) #python-dbg build

#substitute for sleepproxy script and dnsserve.py by bootstrapping some fake data

import os, sys
sys.path.insert(0, os.path.realpath(__file__))

import logging
import logging.handlers
logging.basicConfig(format="%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(process)d/%(threadName)s: %(message)s", level=logging.DEBUG)

import gevent.monkey
gevent.monkey.patch_all()

info = {
   "othermac": "d49a20de9d39",
   "addresses": ["10.2.2.15"],
   "myif": "eth0",
   "mymac": "00:25:31:05:01:98",
   "records": []
}

import dns.message

nsupdate = '''id 45342
opcode UPDATE
rcode NOERROR
flags
edns 0
eflags
payload 1440
;ZONE
;PREREQ
;UPDATE
fakemac._device-info._tcp.local. 4500 IN TXT "model=Macmini3,1" "osxvers=13"
fakemac._ssh._tcp.local. 4500 CLASS32769 TXT ""
_services._dns-sd._udp.local. 4500 IN PTR _ssh._tcp.local.
_ssh._tcp.local. 4500 IN PTR fakemac._ssh._tcp.local.
fakemac._sftp-ssh._tcp.local. 4500 CLASS32769 TXT ""
_services._dns-sd._udp.local. 4500 IN PTR _sftp-ssh._tcp.local.
_sftp-ssh._tcp.local. 4500 IN PTR fakemac._sftp-ssh._tcp.local.
fakemac._smb._tcp.local. 4500 CLASS32769 TXT ""
_services._dns-sd._udp.local. 4500 IN PTR _smb._tcp.local.
_smb._tcp.local. 4500 IN PTR fakemac._smb._tcp.local.
fakemac._eppc._tcp.local. 4500 CLASS32769 TXT ""
_services._dns-sd._udp.local. 4500 IN PTR _eppc._tcp.local.
_eppc._tcp.local. 4500 IN PTR fakemac._eppc._tcp.local.
_kerberos.fakemac.local. 4500 IN TXT "LKDC:SHA1.066C0CD4E8093DBC5E5FFE9B87D23C7C82B53BC5"
fakemac._ssh._tcp.local. 120 CLASS32769 SRV \# 20 0000000000160666616e626f79056c6f 63616c00
fakemac._sftp-ssh._tcp.local. 120 CLASS32769 SRV \# 20 0000000000160666616e626f79056c6f 63616c00
fakemac._smb._tcp.local. 120 CLASS32769 SRV \# 20 0000000001bd0666616e626f79056c6f 63616c00
fakemac._eppc._tcp.local. 120 CLASS32769 SRV \# 20 000000000bd70666616e626f79056c6f 63616c00
9.3.D.9.E.D.E.F.F.F.0.2.A.9.6.D.0.0.0.0.0.0.0.0.0.0.0.0.0.8.E.F.ip6.arpa. 120 CLASS32769 PTR fakemac.local.
15.2.2.10.in-addr.arpa. 120 CLASS32769 PTR fakemac.local.
fakemac.local. 120 CLASS32769 AAAA \# 16 fe80000000000000d69a20fffede9d39
fakemac.local. 120 CLASS32769 A \# 4 0a02020f
;ADDITIONAL'''

message = dns.message.from_text(nsupdate)
for rrset in message.authority:
    info['records'].append(rrset)

import sleepproxy.manager
sleepproxy.manager.manage_host(info)

import signal
def quit(*args):
    sys.exit()
#signal.signal(signal.SIGINFO, print_hosts) #BSD only
signal.signal(signal.SIGQUIT, sleepproxy.manager.print_hosts)
signal.signal(signal.SIGUSR1, sleepproxy.manager.print_hosts)
signal.signal(signal.SIGHUP, sleepproxy.manager.print_hosts) #would like to forget all hosts...
signal.signal(signal.SIGINT, quit)
logging.info('Now waiting for packets. Hit CTRL-C to quit test')
signal.pause()
